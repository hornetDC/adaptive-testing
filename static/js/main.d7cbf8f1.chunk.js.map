{"version":3,"sources":["reportWebVitals.ts","utils/fetch.ts","api/auth.ts","context/AuthContext.tsx","views/Login/Login.tsx","views/Register/Register.tsx","views/Home/Home.tsx","api/questions.ts","components/Question/Question.tsx","api/users.ts","views/Test/Test.tsx","assets/trash.svg","views/Users/Users.tsx","views/EditQuestions/QuestionForm.tsx","views/EditQuestions/EditQuestions.tsx","App.tsx","index.tsx","views/EditQuestions/styles.module.scss","components/Question/styles.module.scss","views/Users/styles.module.scss"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","API_BASE","process","console","log","tryParseJSON","json","JSON","parse","e","Error","FetchException","response","responseData","this","message","statusText","status","handleError","a","text","data","fetch","input","init","url","token","localStorage","getItem","window","headers","Authorization","ok","login","params","method","body","stringify","register","AuthContext","React","createContext","AuthContextWrapper","children","useState","string","err","getAuthDataFromStorage","authData","setAuthData","authorized","Boolean","loginRequest","setItem","registerRequest","logout","useCallback","undefined","clear","values","Provider","value","Login","history","useHistory","useContext","handleSubmit","preventDefault","serialize","currentTarget","hash","replace","toast","error","Container","className","fluid","Form","onSubmit","Group","controlId","Label","Control","name","type","placeholder","required","Button","variant","to","Register","password","passwordConfirm","document","querySelector","setCustomValidity","Home","email","role","onClick","getQuestions","createQuestion","deleteQuestion","id","Question","index","onChange","answerSection","useMemo","as","options","map","option","styles","markdown","memo","getUsers","giveUserAdminRights","levelCoefficients","1","2","3","4","5","_path","Test","questionGroups","setQuestionGroups","currentLevel","setCurrentLevel","currentAnswers","setCurrentAnswers","pickedQuestions","setPickedQuestions","answerLevels","setAnswerLevels","Set","completedLevels","setCompletedLevels","getFiveRandomQuestions","questions","shuffled","sort","Math","random","length","useEffect","forEach","question","difficulty","push","currentLevelQuestions","handleQuestionInputChange","answers","target","newAnswerLevels","correctAnswers","Object","entries","questionId","answerValue","find","answer","score","newCompletedLevels","add","size","some","level","finalScore","reduce","prev","testResult","submitTestResult","userId","alert","nextLevel","nextPickedQuestions","idx","users","setUsers","user","confirm","giveUserAdminRightsRequest","item","success","clsx","href","QuestionForm","onCancel","questionType","setQuestionType","optionsString","setOptionsString","optionsArray","split","filter","trim","newQuestion","Number","createdQuestion","defaultValue","maxLength","pattern","join","_extends","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgTrash","_ref","svgRef","title","titleId","props","width","height","viewBox","xmlns","ref","d","ForwardRef","EditQuestions","isAddingQuestion","setIsAddingQuestion","setQuestions","deletingQuestionId","setDeletingQuestionId","deleteQuesion","deleteQuesionRequest","questionsList","deleteButton","disabled","App","position","autoClose","exact","path","Users","ReactDOM","render","StrictMode","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d7cbf8f1.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const API_BASE = process.env.REACT_APP_API_BASE || '';\r\n\r\nconsole.log('API_BASE', API_BASE);\r\n\r\nconst tryParseJSON = (json: string): object | null => {\r\n  if (!json) return null;\r\n\r\n  try {\r\n    return JSON.parse(json);\r\n  } catch (e) {\r\n    throw new Error(`Failed to parse unexpected JSON response: ${json}`);\r\n  }\r\n};\r\n\r\nfunction FetchException(this: any, response: Response, responseData?: any) {\r\n  this.message = response.statusText;\r\n  this.status = response.status;\r\n  this.response = responseData;\r\n}\r\n\r\nconst handleError = async (response: Response) => {\r\n  const data = tryParseJSON(await response.text());\r\n  throw new FetchException(response, data);\r\n};\r\n\r\nconst fetch = async (input: string, init?: RequestInit) => {\r\n  const url = API_BASE + input;\r\n  const token = localStorage.getItem('authToken') || '';\r\n  const response = await window.fetch(url as any, {\r\n    ...init,\r\n    headers: { Authorization: token, ...init?.headers }\r\n  });\r\n  if (!response.ok) await handleError(response);\r\n\r\n  return response;\r\n};\r\n\r\nexport default fetch;\r\n","import { AuthData, LoginData } from 'types';\r\nimport fetch from 'utils/fetch';\r\n\r\nexport async function login(params: LoginData): Promise<AuthData> {\r\n  const response = await fetch(`/login`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(params),\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport async function register(params: LoginData): Promise<AuthData> {\r\n  const response = await fetch(`/register`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(params),\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n","import React, { useState, useCallback } from 'react';\r\n\r\nimport { AuthData, LoginData } from 'types';\r\nimport { login as loginRequest, register as registerRequest } from 'api/auth';\r\n\r\nconst getAuthDataFromStorage = (): AuthData | undefined => {\r\n  try {\r\n    const string = localStorage.getItem('authData');\r\n    if (string === null) return;\r\n    return JSON.parse(string);\r\n  } catch (err) {\r\n    return;\r\n  }\r\n};\r\n\r\ninterface AuthContextValues {\r\n  authorized: boolean;\r\n  authData?: AuthData;\r\n  setAuthData: React.Dispatch<React.SetStateAction<AuthData | undefined>>;\r\n  login: (data: LoginData) => Promise<void>;\r\n  register: (data: LoginData) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = React.createContext({} as AuthContextValues);\r\n\r\nexport const AuthContextWrapper = ({ children }) => {\r\n  const [authData, setAuthData] = useState<AuthData | undefined>(getAuthDataFromStorage());\r\n  const authorized = Boolean(authData);\r\n\r\n  const login = async (data: LoginData) => {\r\n    const authData = await loginRequest(data);\r\n    setAuthData(authData);\r\n    localStorage.setItem('authData', JSON.stringify(authData));\r\n    localStorage.setItem('authToken', `Bearer ${authData.token}`);\r\n  };\r\n\r\n  const register = async (data: LoginData) => {\r\n    const authData = await registerRequest(data);\r\n    setAuthData(authData);\r\n    localStorage.setItem('authData', JSON.stringify(authData));\r\n    localStorage.setItem('authToken', `Bearer ${authData.token}`);\r\n  };\r\n\r\n  const logout = useCallback(async () => {\r\n    setAuthData(undefined);\r\n    localStorage.clear();\r\n  }, []);\r\n\r\n  const values: AuthContextValues = {\r\n    authorized,\r\n    authData,\r\n    setAuthData,\r\n    login,\r\n    register,\r\n    logout\r\n  };\r\n  return <AuthContext.Provider value={values}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport default AuthContext;\r\n","import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport serialize from 'form-serialize';\r\nimport AuthContext from 'context/AuthContext';\r\n\r\nconst Login: React.FC = () => {\r\n  const history = useHistory();\r\n  const { login } = useContext(AuthContext);\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    try {\r\n      const values = serialize(e.currentTarget, { hash: true }) as any;\r\n      await login(values);\r\n      history.replace('/');\r\n    } catch (err) {\r\n      toast.error(err.response?.error || err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"flex-column\" fluid=\"sm\">\r\n      <h1 className=\"text-center my-4\">Sign In</h1>\r\n      <Form className=\"p-3 w-100 bg-light border\" onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"formEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter\" required />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mt-3\" controlId=\"formPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control name=\"password\" type=\"password\" placeholder=\"Enter\" required />\r\n        </Form.Group>\r\n\r\n        <Button className=\"mt-3\" variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      <LinkContainer to=\"/register\">\r\n        <Button className=\"mt-3\" variant=\"outline-success\">\r\n          Sign Up\r\n        </Button>\r\n      </LinkContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { toast } from 'react-toastify';\r\nimport { Form, Button, Container } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport serialize from 'form-serialize';\r\nimport AuthContext from 'context/AuthContext';\r\n\r\nconst Register: React.FC = () => {\r\n  const history = useHistory();\r\n  const { register } = useContext(AuthContext);\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    try {\r\n      const values = serialize(e.currentTarget, { hash: true }) as any;\r\n      if (values.password !== values.passwordConfirm) {\r\n        document\r\n          .querySelector<HTMLInputElement>('#formConfirmPassword')!\r\n          .setCustomValidity(`Passwords don't match`);\r\n        return;\r\n      }\r\n      await register(values);\r\n      history.replace('/');\r\n    } catch (err) {\r\n      toast.error(err.response?.error || err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"flex-column\" fluid=\"sm\">\r\n      <h1 className=\"text-center my-4\">Sign Up</h1>\r\n      <Form className=\"p-3 w-100 bg-light border\" onSubmit={handleSubmit}>\r\n        <Form.Group controlId=\"formEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control name=\"email\" type=\"email\" placeholder=\"Enter\" required />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mt-3\" controlId=\"formPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control name=\"password\" type=\"password\" placeholder=\"Enter\" required />\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mt-3\" controlId=\"formConfirmPassword\">\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control name=\"passwordConfirm\" type=\"password\" placeholder=\"Enter\" required />\r\n        </Form.Group>\r\n\r\n        <Button className=\"mt-3\" variant=\"primary\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      <LinkContainer to=\"/login\">\r\n        <Button className=\"mt-3\" variant=\"outline-success\">\r\n          Sign In\r\n        </Button>\r\n      </LinkContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React, { useContext } from 'react';\r\nimport { Button, Container } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport AuthContext from 'context/AuthContext';\r\n\r\nconst Home: React.FC = () => {\r\n  const { authData, logout } = useContext(AuthContext);\r\n\r\n  return (\r\n    <Container fluid=\"sm\" className=\"d-flex flex-column\">\r\n      <h1 className=\"text-center my-4\">\r\n        Welcome {authData?.email} {authData?.role === 'admin' && '(A)'}\r\n      </h1>\r\n      <div className=\"border bg-light flex-column p-3 w-100\">\r\n        <h3 className=\"mb-4\">Adaptive test</h3>\r\n        <LinkContainer to=\"/test\">\r\n          <Button className=\"w-100 my-2\">Start</Button>\r\n        </LinkContainer>\r\n        {authData?.role === 'admin' && (\r\n          <>\r\n            <LinkContainer to=\"/users\">\r\n              <Button className=\"w-100 my-2\" variant=\"outline-success\">\r\n                Users\r\n              </Button>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/edit-questions\">\r\n              <Button className=\"w-100 my-2\" variant=\"outline-success\">\r\n                Edit Questions\r\n              </Button>\r\n            </LinkContainer>\r\n          </>\r\n        )}\r\n        <Button className=\"mt-4\" variant=\"outline-danger\" onClick={logout}>\r\n          Logout\r\n        </Button>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import fetch from 'utils/fetch';\r\nimport { Question } from 'types';\r\n\r\nexport async function getQuestions(): Promise<Question[]> {\r\n  const response = await fetch(`/questions`);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport async function createQuestion(body: Omit<Question, 'id'>): Promise<Question> {\r\n  const response = await fetch(`/questions`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(body),\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport async function deleteQuestion(id: string): Promise<void> {\r\n  await fetch(`/questions/${id}`, { method: 'DELETE' });\r\n}\r\n","import React, { ChangeEventHandler, useMemo } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { FormControlElement, Question as QuestionData } from 'types';\r\nimport styles from './styles.module.scss';\r\n\r\ninterface QuestionProps {\r\n  index: number;\r\n  data: QuestionData;\r\n  onChange?: ChangeEventHandler<FormControlElement>;\r\n}\r\n\r\nconst Question: React.FC<QuestionProps> = ({ index, data, onChange }) => {\r\n  const answerSection = useMemo(() => {\r\n    switch (data.type) {\r\n      case 'input':\r\n        return <Form.Control name={data.id} placeholder=\"Enter\" onChange={onChange} required />;\r\n      case 'options':\r\n        return (\r\n          <Form.Control\r\n            as=\"select\"\r\n            name={data.id}\r\n            placeholder=\"Select\"\r\n            onChange={onChange}\r\n            required>\r\n            <option value=\"\">Select option</option>\r\n            {data.options?.map(option => (\r\n              <option key={option}>{option}</option>\r\n            ))}\r\n          </Form.Control>\r\n        );\r\n\r\n      default:\r\n        return null;\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data.type]);\r\n\r\n  return (\r\n    <div className=\"question mt-3 mb-3\">\r\n      <div className=\"d-flex title\">\r\n        <span className=\"text-secondary me-2\">{index}.</span>{' '}\r\n        <ReactMarkdown className={styles.markdown}>{data.text}</ReactMarkdown>\r\n      </div>\r\n      {answerSection}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Question);\r\n","import fetch from 'utils/fetch';\r\nimport { User, TestResultMark } from 'types';\r\n\r\nexport async function getUsers(): Promise<User[]> {\r\n  const response = await fetch(`/users`);\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport async function giveUserAdminRights(id: string): Promise<void> {\r\n  await fetch(`/users/give-admin/${id}`, { method: 'POST' });\r\n}\r\n\r\nexport async function submitTestResult(params: {\r\n  userId: string;\r\n  testResult: TestResultMark;\r\n}): Promise<void> {\r\n  await fetch(`/users/test-result`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(params),\r\n    headers: { 'Content-Type': 'application/json' }\r\n  });\r\n}\r\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\r\nimport { Button, Container, Form } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { getQuestions } from 'api/questions';\r\nimport { FormControlElement, Question as QuestionData, TestResultMark } from 'types';\r\nimport Question from 'components/Question';\r\nimport { submitTestResult } from 'api/users';\r\nimport AuthContext from 'context/AuthContext';\r\n\r\nconst MAX_LEVEL = 5;\r\nconst LEVEL_CORRECT_ANSWERS_TO_FINISH = 15;\r\nconst LEVELS_COMPLETED_TO_FINISH = 3;\r\n\r\nconst levelCoefficients = { 1: 0.1, 2: 0.3, 3: 0.5, 4: 0.7, 5: 0.9 };\r\n\r\nfunction getMarkName(score: number): TestResultMark {\r\n  if (score >= 9) return '5A';\r\n  else if (score >= 7.5) return '4B';\r\n  else if (score >= 6) return '4C';\r\n  else if (score >= 4.5) return '3D';\r\n  else if (score >= 3) return '3E';\r\n  else if (score >= 1.5) return '2Fx';\r\n  else return '2F';\r\n}\r\n\r\ntype QuestionGroups = {\r\n  [key: number]: QuestionData[];\r\n};\r\n\r\nconst Test: React.FC = () => {\r\n  const history = useHistory();\r\n  const { authData } = useContext(AuthContext);\r\n  const [questionGroups, setQuestionGroups] = useState<QuestionGroups>({});\r\n  const [currentLevel, setCurrentLevel] = useState(3);\r\n  const [currentAnswers, setCurrentAnswers] = useState({});\r\n  const [pickedQuestions, setPickedQuestions] = useState<QuestionData[]>([]);\r\n  const [answerLevels, setAnswerLevels] = useState({ 1: 0, 2: 0, 3: 0, 4: 0, 5: 0 });\r\n  const [completedLevels, setCompletedLevels] = useState(new Set<number>());\r\n\r\n  const getFiveRandomQuestions = useCallback(questions => {\r\n    if (!questions) return [];\r\n\r\n    const shuffled = questions.sort(() => 0.5 - Math.random());\r\n    if (shuffled.length > 5) shuffled.length = 5;\r\n    return shuffled;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const questionGroups = { 1: [], 2: [], 3: [], 4: [], 5: [] };\r\n        const questions = await getQuestions();\r\n        questions.forEach(question => {\r\n          questionGroups[question.difficulty].push(question);\r\n        });\r\n\r\n        setQuestionGroups(questionGroups);\r\n\r\n        const currentLevelQuestions = questionGroups[currentLevel];\r\n        const pickedQuestions = getFiveRandomQuestions(currentLevelQuestions);\r\n        setPickedQuestions(pickedQuestions);\r\n      } catch (err) {\r\n        toast.error(err.response?.error || err.message);\r\n      }\r\n    })();\r\n  }, [currentLevel, getFiveRandomQuestions]);\r\n\r\n  const handleQuestionInputChange = (e: React.ChangeEvent<FormControlElement>) => {\r\n    setCurrentAnswers(answers => ({ ...answers, [e.target.name]: e.target.value }));\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n\r\n    if (pickedQuestions.length < 5) {\r\n      toast.error(`Not enought questions for level ${currentLevel}`);\r\n      return;\r\n    }\r\n\r\n    const newAnswerLevels = answerLevels;\r\n    let correctAnswers = 0;\r\n\r\n    Object.entries(currentAnswers).forEach(([questionId, answerValue]) => {\r\n      const question = pickedQuestions.find(question => question.id === questionId);\r\n      if (question!.answer === answerValue) {\r\n        correctAnswers += 1;\r\n        newAnswerLevels[currentLevel] += 1;\r\n      }\r\n    });\r\n\r\n    const newCompletedLevels = completedLevels;\r\n    newCompletedLevels.add(currentLevel);\r\n    // console.log('newAnswerLevels', newAnswerLevels);\r\n    // console.log('newCompletedLevels', newCompletedLevels);\r\n\r\n    // END TEST\r\n    if (\r\n      newCompletedLevels.size >= LEVELS_COMPLETED_TO_FINISH ||\r\n      Object.values(newAnswerLevels).some(level => level >= LEVEL_CORRECT_ANSWERS_TO_FINISH)\r\n    ) {\r\n      const finalScore = Object.entries(newAnswerLevels).reduce(\r\n        (prev, [level, answers]) => (prev += levelCoefficients[level] * answers),\r\n        0\r\n      );\r\n      const testResult = getMarkName(finalScore);\r\n      submitTestResult({ userId: authData!.id, testResult });\r\n      alert(`Test complete, your score is ${testResult}`);\r\n      history.push('/');\r\n      return;\r\n    }\r\n\r\n    let nextLevel = currentLevel;\r\n\r\n    // decrease level\r\n    if (correctAnswers < 3 && currentLevel >= 0) nextLevel -= 1;\r\n    // increase level\r\n    else if (correctAnswers > 3 && currentLevel <= MAX_LEVEL) nextLevel += 1;\r\n\r\n    const nextPickedQuestions = getFiveRandomQuestions(questionGroups[nextLevel]);\r\n    setPickedQuestions(nextPickedQuestions);\r\n    setCurrentAnswers({});\r\n    setCurrentLevel(nextLevel);\r\n    setAnswerLevels(newAnswerLevels);\r\n    setCompletedLevels(newCompletedLevels);\r\n  };\r\n\r\n  return (\r\n    <Container fluid=\"sm\" className=\"d-flex flex-column align-items-center my-3\">\r\n      <h1 className=\"text-center mb-4\">Test</h1>\r\n      <Form className=\"border bg-light flex-column p-3 w-100\" onSubmit={handleSubmit}>\r\n        <div>Current level: {currentLevel}</div>\r\n        {pickedQuestions.map((question, idx) => (\r\n          <Question\r\n            key={question.id}\r\n            index={idx + 1}\r\n            data={question}\r\n            onChange={handleQuestionInputChange}\r\n          />\r\n        ))}\r\n        <Button type=\"submit\">Next</Button>\r\n      </Form>\r\n      <LinkContainer to=\"/\">\r\n        <Button className=\"me-auto mt-3\" variant=\"secondary\">\r\n          Home\r\n        </Button>\r\n      </LinkContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgTrash(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 12,\n    height: 12,\n    viewBox: \"0 0 12 12\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M3 12C2.60218 12 2.22064 11.8419 1.93934 11.5606C1.65803 11.2793 1.5 10.8978 1.5 10.5V3.75H0.75C0.551088 3.75 0.360322 3.67097 0.219669 3.53032C0.0790171 3.38967 0 3.19891 0 3C0 2.80109 0.0790171 2.61033 0.219669 2.46968C0.360322 2.32903 0.551088 2.25 0.75 2.25H3.75V1.5C3.75 1.10218 3.90803 0.720666 4.18934 0.439362C4.47064 0.158057 4.85218 0 5.25 0H6.75C7.14782 0 7.52936 0.158057 7.81066 0.439362C8.09197 0.720666 8.25 1.10218 8.25 1.5V2.25H11.25C11.4489 2.25 11.6397 2.32903 11.7803 2.46968C11.921 2.61033 12 2.80109 12 3C12 3.19891 11.921 3.38967 11.7803 3.53032C11.6397 3.67097 11.4489 3.75 11.25 3.75H10.5V10.5C10.5 10.8978 10.342 11.2793 10.0607 11.5606C9.77936 11.8419 9.39782 12 9 12H3ZM3 10.5H9V3.75H3V10.5ZM5.25 2.25H6.75V1.5H5.25V2.25ZM5.25 6.75C5.05109 6.75 4.86032 6.67097 4.71967 6.53032C4.57902 6.38967 4.5 6.19891 4.5 6C4.5 5.80109 4.57902 5.61033 4.71967 5.46968C4.86032 5.32903 5.05109 5.25 5.25 5.25H6.75C6.94891 5.25 7.13968 5.32903 7.28033 5.46968C7.42098 5.61033 7.5 5.80109 7.5 6C7.5 6.19891 7.42098 6.38967 7.28033 6.53032C7.13968 6.67097 6.94891 6.75 6.75 6.75H5.25Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTrash);\nexport default __webpack_public_path__ + \"static/media/trash.ae4c911f.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from 'react';\r\nimport { Button, Container } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { getUsers, giveUserAdminRights as giveUserAdminRightsRequest } from 'api/users';\r\nimport { User } from 'types';\r\nimport clsx from 'clsx';\r\nimport styles from './styles.module.scss';\r\n\r\nconst Home: React.FC = () => {\r\n  const [users, setUsers] = useState<User[]>();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        setUsers(await getUsers());\r\n      } catch (err) {\r\n        toast.error(err.response?.error || err.message);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const giveUserAdminRights = async (user: User) => {\r\n    const answer = window.confirm(`Do you want to give ${user.email} admin access?`);\r\n    if (!answer) return;\r\n    try {\r\n      await giveUserAdminRightsRequest(user.id);\r\n      setUsers(users =>\r\n        users?.map(item => (item.id === user.id ? { ...item, role: 'admin' } : item))\r\n      );\r\n      toast.success(`Success, ${user.email} is now an admin`);\r\n    } catch (err) {\r\n      toast.error(err.response?.error || err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container fluid=\"sm\" className=\"d-flex flex-column\">\r\n      <h1 className=\"text-center my-4\">Users</h1>\r\n      <div className=\"border bg-light flex-column p-3 w-100\">\r\n        {users?.map(user => (\r\n          <div key={user.id} className={clsx(styles.user, 'border bg-white p-2 my-2')}>\r\n            {user.role !== 'admin' && (\r\n              <Button\r\n                className=\"float-end\"\r\n                variant=\"outline-danger\"\r\n                size=\"sm\"\r\n                onClick={() => giveUserAdminRights(user)}>\r\n                Give admin rights\r\n              </Button>\r\n            )}\r\n            {user.id}\r\n            <div>\r\n              <strong>Email:</strong> <a href={`mailto:${user.email}`}>{user.email}</a>\r\n            </div>\r\n            <div>\r\n              <strong>Role:</strong> {user.role}\r\n            </div>\r\n            <div>\r\n              <strong>Test Reesult:</strong> {user.testResult || '---'}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <LinkContainer to=\"/\">\r\n        <Button className=\"me-auto my-3\" variant=\"secondary\">\r\n          Home\r\n        </Button>\r\n      </LinkContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport serialize from 'form-serialize';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { createQuestion } from 'api/questions';\r\nimport { Question } from 'types';\r\n\r\ntype QuestionType = 'options' | 'input';\r\n\r\ninterface QuestionFormProps {\r\n  onSubmit: (data: Question) => void;\r\n  onCancel: () => void;\r\n}\r\n\r\nconst QuestionForm: React.FC<QuestionFormProps> = ({ onCancel, onSubmit }) => {\r\n  const [questionType, setQuestionType] = useState<QuestionType>('options');\r\n  const [optionsString, setOptionsString] = useState('');\r\n  const optionsArray = optionsString\r\n    .split('$')\r\n    .filter(Boolean)\r\n    .map(item => item.trim());\r\n\r\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault();\r\n    try {\r\n      const values = serialize(e.currentTarget, { hash: true }) as any;\r\n      const newQuestion: Omit<Question, 'id'> = {\r\n        type: values.type,\r\n        text: values.text,\r\n        answer: values.answer,\r\n        difficulty: Number(values.difficulty),\r\n        options: optionsArray.length ? optionsArray : undefined\r\n      };\r\n      const createdQuestion = await createQuestion(newQuestion);\r\n      onSubmit(createdQuestion);\r\n    } catch (err) {\r\n      toast.error(err.response?.error || err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group className=\"my-3\" controlId=\"formType\">\r\n        <Form.Label>Type</Form.Label>\r\n        <Form.Control\r\n          name=\"type\"\r\n          as=\"select\"\r\n          placeholder=\"Select\"\r\n          onChange={e => setQuestionType(e.target.value as QuestionType)}>\r\n          <option value=\"options\">Options</option>\r\n          <option value=\"input\">Input</option>\r\n        </Form.Control>\r\n      </Form.Group>\r\n      <Form.Group className=\"my-3\" controlId=\"formDifficulty\">\r\n        <Form.Label>Difficulty</Form.Label>\r\n        <Form.Control name=\"difficulty\" defaultValue=\"3\" as=\"select\" placeholder=\"Enter\" required>\r\n          <option value=\"1\">0.1</option>\r\n          <option value=\"2\">0.3</option>\r\n          <option value=\"3\">0.5</option>\r\n          <option value=\"4\">0.7</option>\r\n          <option value=\"5\">0.9</option>\r\n        </Form.Control>\r\n      </Form.Group>\r\n      <Form.Group className=\"my-3\" controlId=\"formText\">\r\n        <Form.Label>\r\n          Text <span className=\"text-secondary\">(300 max)</span>\r\n        </Form.Label>\r\n        <Form.Control name=\"text\" as=\"textarea\" placeholder=\"Enter\" maxLength={300} required />\r\n      </Form.Group>\r\n      <Form.Group className=\"my-3\" controlId=\"formAnswer\">\r\n        <Form.Label>\r\n          Answer{' '}\r\n          {questionType === 'options' && (\r\n            <span className=\"text-secondary\">(must be present in options)</span>\r\n          )}\r\n        </Form.Label>\r\n        <Form.Control\r\n          name=\"answer\"\r\n          placeholder=\"Enter\"\r\n          required\r\n          pattern={questionType === 'options' ? optionsArray.join('|') : undefined}\r\n        />\r\n      </Form.Group>\r\n\r\n      {questionType === 'options' && (\r\n        <Form.Group className=\"my-3\" controlId=\"formOptions\">\r\n          <Form.Label>\r\n            Options <span className=\"text-secondary\">(separated by '$' symbols)</span>\r\n          </Form.Label>\r\n          <Form.Control\r\n            className=\"mb-1\"\r\n            name=\"options\"\r\n            placeholder=\"Enter\"\r\n            required\r\n            defaultValue={optionsString}\r\n            onChange={e => setOptionsString(e.target.value)}\r\n          />\r\n          {optionsArray.map((item, idx) => (\r\n            <span key={`${item}-${idx}`} className=\"me-1 d-inline-block border lh-1 p-1 rounded\">\r\n              {item}\r\n            </span>\r\n          ))}\r\n        </Form.Group>\r\n      )}\r\n\r\n      <div className=\"mt-4\">\r\n        <Button className=\"me-2\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n        <Button variant=\"secondary\" type=\"button\" onClick={onCancel}>\r\n          Cancel\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default QuestionForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Container } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { Question } from 'types';\r\nimport { getQuestions, deleteQuestion as deleteQuesionRequest } from 'api/questions';\r\nimport QuestionForm from './QuestionForm';\r\nimport { ReactComponent as SVGTrash } from 'assets/trash.svg';\r\nimport styles from './styles.module.scss';\r\nimport clsx from 'clsx';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\nconst EditQuestions: React.FC = () => {\r\n  const [isAddingQuestion, setIsAddingQuestion] = useState(false);\r\n  const [questions, setQuestions] = useState<Question[]>();\r\n  const [deletingQuestionId, setDeletingQuestionId] = useState<string>();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        setQuestions(await getQuestions());\r\n      } catch (err) {\r\n        toast.error(err.response?.error || err.message);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const handleQuestionFormSubmit = (newQuestion: Question) => {\r\n    setQuestions(questions => [...(questions || []), newQuestion]);\r\n    setIsAddingQuestion(false);\r\n  };\r\n\r\n  const deleteQuesion = async (id: string) => {\r\n    if (!window.confirm('Do you really want to delete this question?')) return;\r\n    setDeletingQuestionId(id);\r\n    try {\r\n      await deleteQuesionRequest(id);\r\n      setQuestions(questions => questions!.filter(item => item.id !== id));\r\n    } catch (err) {\r\n      toast.error(err.response?.error || err.message);\r\n    }\r\n    setDeletingQuestionId(undefined);\r\n  };\r\n\r\n  return (\r\n    <Container fluid=\"sm\" className=\"d-flex my-3 flex-column align-items-center\">\r\n      <div className=\"border bg-light flex-column p-3 w-100\">\r\n        <h3 className=\"mb-4\">Edit Questions</h3>\r\n        {isAddingQuestion ? (\r\n          <QuestionForm\r\n            onCancel={() => setIsAddingQuestion(false)}\r\n            onSubmit={handleQuestionFormSubmit}\r\n          />\r\n        ) : (\r\n          <>\r\n            <Button onClick={() => setIsAddingQuestion(true)}>New Question</Button>\r\n            <div className={clsx('border bg-white p-2', styles.questionsList)}>\r\n              {!questions && 'Loading...'}\r\n              {questions?.map(question => (\r\n                <div key={question.id} className={clsx('border bg-light p-1', styles.question)}>\r\n                  <button\r\n                    className={styles.deleteButton}\r\n                    onClick={() => deleteQuesion(question.id)}\r\n                    disabled={deletingQuestionId === question.id}>\r\n                    <SVGTrash />\r\n                  </button>\r\n                  <div>#{question.id}</div>\r\n                  <ReactMarkdown className={styles.markdown}>{question.text}</ReactMarkdown>\r\n                  <div>\r\n                    <strong>Answer:</strong> {question.answer}\r\n                  </div>\r\n                  {question.options && (\r\n                    <div>\r\n                      <strong>Options:</strong> {question.options.join(' | ')}\r\n                    </div>\r\n                  )}\r\n                  <div>\r\n                    <strong>Difficulty:</strong> {question.difficulty}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      <LinkContainer to=\"/\">\r\n        <Button className=\"me-auto mt-3\" variant=\"secondary\">\r\n          Home\r\n        </Button>\r\n      </LinkContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default EditQuestions;\r\n","import { useContext } from 'react';\nimport { HashRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { ToastContainer } from 'react-toastify';\nimport AuthContext from 'context/AuthContext';\nimport Login from 'views/Login';\nimport Register from 'views/Register';\nimport Home from 'views/Home';\nimport Test from 'views/Test';\nimport Users from 'views/Users';\nimport EditQuestions from 'views/EditQuestions';\n\nconst App = () => {\n  const { authorized, authData } = useContext(AuthContext);\n\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" autoClose={3000} />\n      <Router>\n        {!authorized && <Redirect to=\"/login\" />}\n        <Switch>\n          {authorized && (\n            <>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route exact path=\"/test\">\n                <Test />\n              </Route>\n              {authData?.role === 'admin' && (\n                <>\n                  <Route exact path=\"/users\">\n                    <Users />\n                  </Route>\n                  <Route exact path=\"/edit-questions\">\n                    <EditQuestions />\n                  </Route>\n                </>\n              )}\n            </>\n          )}\n\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/register\">\n            <Register />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nimport 'modern-normalize/modern-normalize.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\nimport { AuthContextWrapper } from './context/AuthContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthContextWrapper>\n      <App />\n    </AuthContextWrapper>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteButton\":\"styles_deleteButton__2ycuK\",\"questionsList\":\"styles_questionsList__rwOWL\",\"question\":\"styles_question__PKR8C\",\"markdown\":\"styles_markdown__2RRKX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"markdown\":\"styles_markdown__1tjon\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"styles_user__1hXgl\"};"],"sourceRoot":""}